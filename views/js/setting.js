(function() {
    const DEFAULT_SETTINGS = {
      timeLimit: 120,
      sameQrTimeLimit: 1200,
      maxMessagesPerUser: 3,
      maxMessagesSamePerUser: 2,
      maxProcessingPerUser: 2
    };
  
    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å backend ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á ms ‚Üí s ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á
    async function loadSettings() {
        try {
          const response = await fetch('/api/settings');
          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
      
          const settings = await response.json();
      
          document.getElementById('timeLimit').value = settings.timeLimit;
          document.getElementById('sameQrTimeLimit').value = settings.sameQrTimeLimit;
          document.getElementById('maxMessagesPerUser').value = settings.maxMessagesPerUser;
          document.getElementById('maxMessagesSamePerUser').value = settings.maxMessagesSamePerUser;
          document.getElementById('maxProcessingPerUser').value = settings.maxProcessingPerUser;
      
        } catch (error) {
          console.error('Error loading settings:', error);
          alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ: ' + error.message);
        }
      }
  
    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å form ‡πÇ‡∏î‡∏¢‡πÅ‡∏õ‡∏•‡∏á s ‚Üí ms ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
    async function saveSettings() {
      try {
        const saveBtn = document.querySelector('.save-btn');
        saveBtn.disabled = true;
        saveBtn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';
  
        const settings = {
          timeLimit: parseInt(document.getElementById('timeLimit').value) * 1000,          // s ‚Üí ms
          sameQrTimeLimit: parseInt(document.getElementById('sameQrTimeLimit').value) * 1000,
          maxMessagesPerUser: parseInt(document.getElementById('maxMessagesPerUser').value),
          maxMessagesSamePerUser: parseInt(document.getElementById('maxMessagesSamePerUser').value),
          maxProcessingPerUser: parseInt(document.getElementById('maxProcessingPerUser').value)
        };
  
        for (const [key, value] of Object.entries(settings)) {
          if (isNaN(value) || value < 0) {
            throw new Error(`‡∏Ñ‡πà‡∏≤ ${key} ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
          }
        }
  
        const response = await fetch('/api/settings', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Cache-Control': 'no-cache'
          },
          body: JSON.stringify(settings)
        });
  
        const result = await response.json();
        if (result.success) {
          alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
        } else {
          throw new Error(result.error || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ');
        }
  
      } catch (error) {
        console.error('Save error:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ' + error.message);
      } finally {
        const saveBtn = document.querySelector('.save-btn');
        saveBtn.disabled = false;
        saveBtn.textContent = '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤';
      }
    }
  
    // ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ s) ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ backend ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ms ‡∏ù‡∏±‡πà‡∏á server
    async function resetSettings() {
      if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?')) {
        try {
          const response = await fetch('/api/settings', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              timeLimit: DEFAULT_SETTINGS.timeLimit * 1000,
              sameQrTimeLimit: DEFAULT_SETTINGS.sameQrTimeLimit * 1000,
              maxMessagesPerUser: DEFAULT_SETTINGS.maxMessagesPerUser,
              maxMessagesSamePerUser: DEFAULT_SETTINGS.maxMessagesSamePerUser,
              maxProcessingPerUser: DEFAULT_SETTINGS.maxProcessingPerUser
            })
          });
  
          const result = await response.json();
          if (result.success) {
            Object.keys(DEFAULT_SETTINGS).forEach(key => {
              document.getElementById(key).value = DEFAULT_SETTINGS[key];
            });
            alert('‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
          } else {
            throw new Error(result.error || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÑ‡∏î‡πâ');
          }
  
        } catch (error) {
          console.error('Reset error:', error);
          alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ' + error.message);
        }
      }
    }
  
    // üîÅ Export ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô global
    window.resetSettings = resetSettings;
    window.loadSettings = loadSettings;
    window.saveSettings = saveSettings;
  
    // ‚è≥ ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠ DOM ‡∏û‡∏£‡πâ‡∏≠‡∏°
    function waitForElement(id, callback) {
        const el = document.getElementById(id);
        if (el) {
          callback();
        } else {
          setTimeout(() => waitForElement(id, callback), 100); // ‡∏£‡∏≠‡∏ß‡∏ô‡πÑ‡∏õ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠ element
        }
      }
      
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å loadSettings ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠ input ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°
      waitForElement("maxProcessingPerUser", loadSettings);
  })();
  